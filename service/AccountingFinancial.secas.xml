<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<secas xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-eca-2.1.xsd">
    <!-- now called directly by deposit and withdraw services:
    <seca service="create#mantle.account.financial.FinancialAccountTrans" when="post-service">
        <!- - FinancialAccountTrans is create-only so only trigger on create - ->
        <actions><service-call name="mantle.account.FinancialAccountServices.calculate#FinancialAccountTotals"
                in-map="context"/></actions>
    </seca>
    -->
    <!-- now called directly by authorize service:
    <seca service="create#mantle.account.financial.FinancialAccountAuth" when="post-service">
        <actions><service-call name="mantle.account.FinancialAccountServices.calculate#FinancialAccountTotals"
                in-map="context"/></actions>
    </seca>
    -->
    <!-- Update FinancialAccount Totals on Auth changes -->
    <seca id="FinancialAccountAuthUpdateCalcTotals" service="update#mantle.account.financial.FinancialAccountAuth" when="post-service">
        <actions><service-call name="mantle.account.FinancialAccountServices.calculate#FinancialAccountTotals"
                in-map="context"/></actions>
    </seca>
    <seca id="FinancialAccountAuthDeleteCalcTotals" service="delete#mantle.account.financial.FinancialAccountAuth" when="post-service">
        <actions><service-call name="mantle.account.FinancialAccountServices.calculate#FinancialAccountTotals"
                in-map="context"/></actions>
    </seca>

    <!-- Invoice Item Automatic Financial Account Transaction -->
    <seca id="InvoiceCreateFinAccountTx" service="update#mantle.account.invoice.Invoice" when="post-service" run-on-error="false">
        <condition><expression>statusChanged &amp;&amp; (statusId == 'InvoiceFinalized' || statusId == 'InvoiceApproved')</expression></condition>
        <actions><service-call name="mantle.account.FinancialAccountServices.checkCreate#InvoiceTransactions" in-map="context"/></actions>
    </seca>
    <!-- Cancel Invoice reverse TX -->
    <seca id="InvoiceCancelReverseFinAccountTx" service="update#mantle.account.invoice.Invoice" when="post-service" run-on-error="false">
        <condition><expression>statusChanged &amp;&amp; statusId == 'InvoiceCancelled'</expression></condition>
        <actions><service-call name="mantle.account.FinancialAccountServices.reverse#InvoiceTransactions" in-map="context"/></actions>
    </seca>
    <!-- Outgoing and Incoming Invoice resume changes revert TX -->
    <seca id="InvoiceResumeChangesReverseFinAccountTx" service="update#mantle.account.invoice.Invoice" when="post-service" run-on-error="false">
        <condition><expression>statusChanged &amp;&amp; (
            (oldStatusId in ['InvoiceFinalized', 'InvoiceSent'] &amp;&amp; statusId == 'InvoiceInProcess') ||
            (oldStatusId == 'InvoiceApproved' &amp;&amp; statusId == 'InvoiceReceived'))</expression></condition>
        <actions><service-call name="mantle.account.FinancialAccountServices.reverse#InvoiceTransactions" in-map="context"/></actions>
    </seca>

    <!-- Payment Automatic Financial Account Transaction -->
    <seca id="PaymentCreateFinAccountTx" service="update#mantle.account.payment.Payment" when="post-service" run-on-error="false">
        <condition><expression>statusChanged &amp;&amp; statusId == 'PmntDelivered' &amp;&amp; oldStatusId != 'PmntConfirmed'</expression></condition>
        <actions><service-call name="mantle.account.FinancialAccountServices.checkCreate#PaymentTrans" in-map="context"/></actions>
    </seca>
    <!-- Payment Cancel, Void, Undeliver (PmntDelivered => PmntPromised) revert TX -->
    <seca id="PaymentReverseFinAccountTx" service="update#mantle.account.payment.Payment" when="post-service" run-on-error="false">
        <condition><expression>statusChanged &amp;&amp; ((statusId in ['PmntCancelled', 'PmntVoid']) ||
            (oldStatusId == 'PmntDelivered' &amp;&amp; statusId in ['PmntPromised', 'PmntAuthorized']))</expression></condition>
        <actions><service-call name="mantle.account.FinancialAccountServices.reverse#PaymentTrans" in-map="context"/></actions>
    </seca>
</secas>
