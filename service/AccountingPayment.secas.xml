<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<secas xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-eca-2.1.xsd">
    <!-- Authorize Payment when Order Placed -->
    <seca id="OrderPlacedAuthorizePayments" service="update#mantle.order.OrderHeader" when="post-service" run-on-error="false">
        <condition><expression>statusChanged &amp;&amp; statusId == 'OrderPlaced'</expression></condition>
        <actions><service-call name="mantle.account.PaymentServices.authorize#OrderPayments" in-map="context"/></actions>
    </seca>

    <!-- Payment Validation: don't allow Delivered status if effectiveDate is null -->
    <seca id="PaymentCheckEffectiveDate" service="update#mantle.account.payment.Payment" when="post-service" run-on-error="false" priority="2">
        <condition><expression>statusChanged &amp;&amp; statusId == 'PmntDelivered'</expression></condition>
        <actions><if condition="effectiveDate == null">
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <if condition="payment.effectiveDate == null"><return error="true" message="Effective Date is not set"/></if>
        </if></actions>
    </seca>
    <!-- When Payment is Delivered or Confirmed if it was for an Invoice (Payment.forInvoiceId) and not yet applied then automatically apply -->
    <!-- NOTE: the SECA in AccountingLedger.secas.xml to call mantle.ledger.PaymentAutoPostServices.post#Payment is also triggered
        on Delivered, may run before or after this but cleaner if this runs before to avoid separate posting for PaymentApplication -->
    <seca id="PaymentApplyForInvoice" service="update#mantle.account.payment.Payment" when="post-service" run-on-error="false" priority="3">
        <condition><expression>statusChanged &amp;&amp; (statusId in ['PmntDelivered', 'PmntConfirmed'])</expression></condition>
        <actions><service-call name="mantle.account.PaymentServices.apply#PaymentForInvoice" in-map="context"/></actions>
    </seca>

    <!-- If cancelled (Cancelled, Void, Refunded) call void#Payment to un-apply if needed, etc -->
    <seca id="PaymentCancelledCleanup" service="update#mantle.account.payment.Payment" when="post-service" run-on-error="false">
        <condition><expression>statusChanged &amp;&amp; (statusId in ['PmntCancelled', 'PmntVoid'])</expression></condition>
        <actions><service-call name="mantle.account.PaymentServices.void#Payment" in-map="context"/></actions>
    </seca>
    <!-- Payment Undeliver (PmntDelivered => PmntPromised) call void#Payment to un-apply if needed, etc -->
    <seca id="PaymentUnDeliverCleanup" service="update#mantle.account.payment.Payment" when="post-service" run-on-error="false">
        <condition><expression>statusChanged &amp;&amp; oldStatusId == 'PmntDelivered' &amp;&amp; statusId in ['PmntPromised', 'PmntAuthorized']</expression></condition>
        <actions><service-call name="mantle.account.PaymentServices.void#Payment" in-map="context"/></actions>
    </seca>
</secas>
